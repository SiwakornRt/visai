# version: '3'
services:
  redis:
    image: redis/redis-stack-server
    container_name: pipek-redis
    volumes:
      - ../deployment/pipek/redis/data:/data
    restart: always
    networks:
      - default
    logging:
      options:
        max-size: "10m"
        max-file: "3"
  web:
    build: .
    image: pipek-image
    container_name: pipek-web
    volumes:
      - ../deployment:/deployment
      - /etc/localtime:/etc/localtime:ro
    ports:
      - 9000:9000
    links:
      - mongodb
      - redis
    depends_on:
      - mongodb
      - redis
    networks:
      - default
    restart: always
    environment:
      PIPEK_SETTINGS: /app/.env
    env_file:
      - .env
    command: 
      /venv/bin/gunicorn -w 8 --bind 0.0.0.0:9000 "pipek.web:create_app()"
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  controller:
    build: .
    image: pipek-image
    container_name: pipek-controller
    volumes:
      - ../deployment:/deployment
      - /etc/localtime:/etc/localtime:ro
    links:
      - mongodb
      - redis
      - influxdb
    depends_on:
      - mongodb
      - redis
      - influxdb
    networks:
      - default
    restart: always
    # environment:
    # PIPEK_SETTINGS: /app/pipek-production.cfg
    env_file:
      - .env
    command: /venv/bin/pipek-controller
    logging:
      options:
        max-size: "10m"
        max-file: "3"


  worker:
    build: .
    image: pipek-image
    container_name: pipek-worker
    volumes:
      - ../deployment:/deployment
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - mongodb
      - redis
    links:
      - mongodb
      - redis
    restart: always
    env_file:
      - .env

    # environment:
    # PIPEK_SETTINGS: /app/pipek-production.cfg
    command: /venv/bin/pipek-worker
    logging:
      options:
        max-size: "10m"
        max-file: "3"


networks:
  default:
